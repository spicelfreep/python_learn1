GIT常用命令

- # GIT代码库：https://codehub-g.huawei.com/groups/hybrid-cloud-continuous-operation/detail
- # 添加远程仓库地址到本地仓库 ,Sets the new remote
- $ git remote add origin {远程仓库地址}
- # Verifies the new remote URL
- 

- $ git remote -v
- # push到远程仓库
- 

- $ git push -u origin master
- 

- 

- # 修改默认pull和push分支：
- # origin/develop develop为要设置的默认分支
- $ git branch --set-upstream-to=origin/develop develop
- 

- 

- 

- 

- git log --pretty=format:"%s" --since=1.months
- git log --pretty=format:"%cn  %cr  %cd  %s" --since=1.months | grep -v 'Merge'
- git log --pretty=format:"%cn  %cr  %cd  %s" --since=2.months --author=helin | grep -v 'Merge'
- git log --pretty=format:"%s" --since=2.months --author=helin | grep -v 'Merge'
- git log --pretty=format:"%cn  %cr  %cd  %s" --since=2.months --until=1.months --author=helin | grep -v 'Merge'
- 

- git log --pretty=format:"%cn %s" --graph
- git log --since='2021-06-06 00:00:00' --until='2021-06-12 00:00:00' --author="helin" --numstat --pretty=tformat: --no-merges |  awk '{ add += $1; subs += $2; loc += $1 - $2 } END { printf "added lines, %s, removed lines, %s, total lines, %s\n", add, subs, loc }' -;
    - git log --pretty=format:"%cn %cr %cd %s" --since='2021-05-01 00:00:00' --until='2021-06-01 00:00:00' --author="helin" --numstat 
- 

- //默认git的日志时区是 UTC +0000
- //中国的时区是 UTC +8000
- git log --date=local //临时生效
- //或者
- git config --global log.date local //全局生效
- //查看
- git config --list
- Git log修改时间格式
- git config log.date format:'%Y-%m-%d %H:%M:%S'
- git config --global log.date format:'%Y-%m-%d %H:%M:%S'
- 

- 删除本地分支
在删除分支的时候,我们会使用git branch --delete dev来执行.有时还会通过缩写git branch -d dev来代替,使用中我们发现还有git branch -D dev的写法,他们有什么区别呢?

-d是--delete的缩写,在使用--delete删除分支时,该分支必须完全和它的上游分支merge完成(了解上游分支,可以点击查看链接),如果没有上游分支,必须要和HEAD完全merge
-D是--delete --force的缩写,这样写可以在不检查merge状态的情况下删除分支

--force简写-f,作用是将当前branch重置到初始点(startpoint),如果不使用--force的话,git分支无法修改一个已经存在的分支.

删除远程分支
指令git push origin --delete branch,该指令也会删除追踪分支


git revert：放弃某次提交。
git revert 之前的提交仍会保留在 git log 中，而此次撤销会做为一次新的提交。
git revert -m：用于对 merge 节点的操作，-m 指定具体某个提交点。
撤销提交
要撤销中间某次提交时，使用 git revert 也是一个很好的选择：
